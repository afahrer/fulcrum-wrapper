id: fulcrum
title: "Fulcrum"
version: 1.10.0
release-notes: "Revamped for EmabssyOS 0.3.3"
license: GPL-3.0
wrapper-repo: "https://github.com/afahrer/Fulcrum-wrapper"
upstream-repo: "https://github.com/cculianu/Fulcrum"
support-site: "https://github.com/cculianu/Fulcrum/issues"
marketing-site: "https://github.com/cculianu/Fulcrum"
build: ["make"]
description:
  short: Example service
  long: |
    Hello World is a bare-bones service that launches a web interface to say "Hello World", and nothing more.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /data
health-checks: 
  electrum:
    name: Electrum RPC Interface
    success-message: The electrum RPC interface is alive and responding to basic commands.
    type: docker
    image: main
    entrypoint: "check-electrum.sh"
    args: []
    inject: true
    system: false
    io-format: json
  getinfo:
    name: Get info
    success-message: The indexes are built and the electrum interface is fully operational. You may now connect a wallet.
    type: docker
    image: main
    entrypoint: "fulcrum-getinfo.sh"
    args: []
    inject: true
    system: false
    io-format: json
config:
  get:
    type: script
  set:
    type: script
properties:
  type: script
volumes:
  main:
    type: data
interfaces:
  electrum:
    name: Electrum Interface
    description: Do not use the URL below.  Instead, look in electrs' Properties section for your electrum server address.
    tor-config:
      port-mapping:
        50001: "50001"
    ui: false
    protocols:
      - tcp
      - json-rpc
dependencies:
  bitcoind:
    version: ">=0.21.1.2 <27.0.0"
    requirement:
      type: "required"
    description: Needed for peer interface and rpc interface.
    config:
      check:
        type: script
      auto-configure:
        type: script
backup:
  create:
    type: script
  restore:
    type: script
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
